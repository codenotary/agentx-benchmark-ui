import{j as g}from"./index-D-YG3zCo.js";function l(e,a,s){return{_type:e,_runId:s,_timestamp:new Date().toISOString(),...a}}async function f(){try{await g.initialize();const e=await g.getStats();if(console.log("JSONIC stats:",e),e?.document_count>0){const s=await(await g.getDatabase()).find({_type:"benchmark_run"}).sort({timestamp:-1}).limit(1).exec();if(s&&s.length>0){const u=new Date(s[0]._timestamp||s[0].timestamp),t=(new Date().getTime()-u.getTime())/(1e3*60);if(console.log(`Data age: ${t.toFixed(1)} minutes`),t<5)return console.log("Data is fresh, skipping migration"),!1}}return!0}catch(e){return console.error("Error checking migration status:",e),!0}}async function _(e){try{if(e?.({phase:"checking",current:0,total:100,message:"Checking database status...",percentage:0}),!await f())return e?.({phase:"complete",current:100,total:100,message:"Database is up to date",percentage:100}),!0;e?.({phase:"loading",current:0,total:100,message:"Loading benchmark data...",percentage:10});const m=await fetch("/agentx-benchmark-ui/data/database.json");if(!m.ok)throw new Error(`Failed to fetch database.json: ${m.status}`);const t=await m.json(),o=(t.benchmark_runs?.length||0)+(t.model_performance?.length||0)+(t.test_results?.length||0)+(t.performance_trends?.length||0);console.log(`Total documents to migrate: ${o}`);let i=0;e?.({phase:"migrating",current:i,total:o,message:"Migrating benchmark runs...",percentage:20});const c=[];if(t.benchmark_runs){const n=t.benchmark_runs.map(r=>l("benchmark_run",r));c.push(...n)}if(t.model_performance){const n=t.model_performance.map(r=>l("model_performance",r,r.run_id));c.push(...n)}if(t.test_results){const n=t.test_results.map(r=>l("test_result",r,r.run_id));c.push(...n)}if(t.performance_trends){const n=t.performance_trends.map(r=>l("performance_trend",r));c.push(...n)}const d=50;for(let n=0;n<c.length;n+=d){const r=c.slice(n,Math.min(n+d,c.length));await Promise.all(r.map(h=>g.insert(h))),i+=r.length;const p=20+i/o*70;e?.({phase:"migrating",current:i,total:o,message:`Migrating documents... (${i}/${o})`,percentage:p})}return e?.({phase:"complete",current:o,total:o,message:`Migration complete! ${o} documents loaded.`,percentage:100}),console.log(`‚úÖ Migration complete! Total documents: ${i}`),!0}catch(a){throw console.error("Migration failed:",a),e?.({phase:"error",current:0,total:100,message:`Migration failed: ${a instanceof Error?a.message:"Unknown error"}`,percentage:0}),a}}async function w(e){try{console.log("üîç Checking JSONIC database...");const a=await _(e);return a&&console.log("‚úÖ Database ready"),a}catch(a){return console.error("Failed to initialize database:",a),!1}}export{w as checkAndMigrateOptimized,_ as performOptimizedMigration};
//# sourceMappingURL=optimizedMigration-uq5-Wibj.js.map
